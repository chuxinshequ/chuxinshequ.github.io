<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nginx on 不忘初心</title>
    <link>https://daonao.github.io/chuxin/categories/nginx/</link>
    <description>Recent content in Nginx on 不忘初心</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Copyright (c) 2015 - 2016, YourCompany; all rights reserved.</copyright>
    <lastBuildDate>Mon, 12 Feb 2018 11:31:13 +0000</lastBuildDate>
    
	<atom:link href="https://daonao.github.io/chuxin/categories/nginx/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>（开包即用，不用看代码！）Windows下NetBeans调试Docker中nginx&#43;PHP-fpm路由的八种配置以及两种控制台配置两种DotNet配置</title>
      <link>https://daonao.github.io/chuxin/blog/2018/02/12/netbeans-xdebug-php-fpm-in-docker-by-windows-share-folder/</link>
      <pubDate>Mon, 12 Feb 2018 11:31:13 +0000</pubDate>
      
      <guid>https://daonao.github.io/chuxin/blog/2018/02/12/netbeans-xdebug-php-fpm-in-docker-by-windows-share-folder/</guid>
      <description>CSDN博客
微博文章
微博
准备环境  带有PowerShell的Windows操作系统，测试环境为Windows 10，其他版本没有测试过。 Windows上安装有Docker docker-machine命令能找到一台运行中的Docker主机 Docker主机不限于Windows上的虚拟机中安装，但是应当处于相同子网中。 Windows上安装有NetBeans  准备程序 启动PowerShell进入一个文件夹
下载项目代码
git clone https://github.com/huzhenghui/Netbeans-Xdebug-PHP-fpm-in-Docker-by-Windows-share-folder.git  进入项目文件夹
cd Netbeans-Xdebug-PHP-fpm-in-Docker-by-Windows-share-folder  更新子模块代码
git submodule update --init  设置共享到Docker的Volume卷名称，应当注意避免和Docker上已有的卷名冲突
$env:VOLUME_NAME=&amp;quot;Netbeans-Xdebug-PHP-fpm-in-Docker-by-Windows-share-folder&amp;quot;  使用脚本把Windows文件夹共享到Docker，脚本具体执行过程详见源代码。
.\share-windows-folder-to-docker\share-windows-folder-to-docker.ps1 -workingDir . -volumeName ${env:VOLUME_NAME}  测试共享效果
docker run --rm -v ${env:VOLUME_NAME}:/share alpine ls /share  共享成功将能看到Windows项目文件夹的内容
八种NetBeans、Xdebug、nginx、PHP-fpm、PHP路由的排列组合配置    NetBeans Xdebug nginx PHP-fpm PHP路由 命令     不需要 不需要 不需要 docker-compose-f docker-compose.php.yml up   不需要 不需要 需要 docker-compose-f docker-compose.</description>
    </item>
    
    <item>
      <title>借助Docker解耦合运维工具和运行时工具</title>
      <link>https://daonao.github.io/chuxin/blog/2018/02/06/docker-decoupling-operation-tool-and-runtime-tool/</link>
      <pubDate>Tue, 06 Feb 2018 23:58:04 +0000</pubDate>
      
      <guid>https://daonao.github.io/chuxin/blog/2018/02/06/docker-decoupling-operation-tool-and-runtime-tool/</guid>
      <description>CSDN博客
微博文章
微博
在部署的时候，经常会遇到这样的情况，运维工具和运行时工具互相干扰，借助Docker可以很方便的解决这个问题，下面以部署Zend Expressive Skeleton为例说明（这个例子中没有运维工具和运行时工具互相干扰的问题，仅用于演示）。
准备 本例假设在Windows操作系统中，Linux的情况可能会更简单些。假设使用docker-machine命令可以访问到一台Docker主机。
公共部分 为了不纠缠具体的技术细节，本例已经把和具体项目无关的公共部分独立为开源项目。
进入工作目录。
下载使用Docker运行nginx+PHP-fpm路由模式的代码
git clone https://github.com/huzhenghui/Docker-run-nginx-PHP-fpm-web-server-router-from-Windows-share-folder zend-expressive-skeleton  进入项目文件夹
cd zend-expressive-skeleton  更新子模块代码
git submodule update --init  由于Docker主机上的卷需要唯一名称，本文使用一个环境变量。
$env:VOLUME_NAME=&amp;quot;zend-expressive-skeleton&amp;quot;  以管理员权限启动PowerShell，运行把Windows文件夹共享到Docker主机的脚本，此处要求docker-machine命令能访问到一台运行中的Docker主机，更多选项请参考其中的源代码。
.\share-windows-folder-to-docker\share-windows-folder-to-docker.ps1 -workingDir . -volumeName ${env:VOLUME_NAME}  测试卷的加载情况。
docker run --rm -v ${env:VOLUME_NAME}:/nginx-PHP-fpm-web-server-router alpine ls /nginx-PHP-fpm-web-server-router  显示文件夹的内容即代表共享成功。
LICENSE docker-compose.yml nginx php share-windows-folder-to-docker  交互安装模式 在公共部分的基础上，可以交互安装。
先删除原有位置的代码。
docker run -it --rm -v ${env:VOLUME_NAME}:/nginx-PHP-fpm-web-server-router --entrypoint /bin/sh alpine -c &amp;quot;rm -rf /nginx-PHP-fpm-web-server-router/php&amp;quot;  然后安装。</description>
    </item>
    
    <item>
      <title>（开包即用，不用看代码！）在 Docker 中用 nginx 和 PHP-fpm 运行来自 Windows 共享文件夹的路由模式网站</title>
      <link>https://daonao.github.io/chuxin/blog/2018/02/04/docker-run-nginx-php-fpm-web-server-router-from-windows-share-folder/</link>
      <pubDate>Sun, 04 Feb 2018 16:41:05 +0000</pubDate>
      
      <guid>https://daonao.github.io/chuxin/blog/2018/02/04/docker-run-nginx-php-fpm-web-server-router-from-windows-share-folder/</guid>
      <description>CSDN博客
微博文章
微博
准备  PowerShell git docker 使用docker-machine命令可以找到一台可用的Docker主机  开包即用，不用看代码！ 初始化 进入一个文件夹。
下载已经写好的开源项目
git clone https://github.com/huzhenghui/Docker-run-nginx-PHP-fpm-web-server-router-from-Windows-share-folder  进入开源项目文件夹
cd Docker-run-nginx-PHP-fpm-web-server-router-from-Windows-share-folder  更新子模块代码
git submodule update --init  使用管理员权限的PowerShell运行共享文件夹到Docker的脚本。
.\share-windows-folder-to-docker\share-windows-folder-to-docker.ps1 -workingDir . -volumeName nginx-PHP-fpm-web-server-router  查看文件夹是否共享成功
docker run --rm -v nginx-PHP-fpm-web-server-router:/share alpine ls /share  如果成功将看到开源项目的如下文件列表
LICENSE docker-compose.yml nginx php share-windows-folder-to-docker  使用PHP内建的Web Server的路由方式 启动PHP内建web server
docker run -it --rm -v nginx-PHP-fpm-web-server-router:/nginx-PHP-fpm-web-server-router -p 80:80 php -S 0.0.0.0:80 -t /nginx-PHP-fpm-web-server-router/php/public index.</description>
    </item>
    
    <item>
      <title>（开包即用，不用看代码！）在 Docker 中用 nginx 和 PHP-fpm 运行来自 Windows 共享文件夹的网站</title>
      <link>https://daonao.github.io/chuxin/blog/2018/02/04/docker-run-nginx-php-fpm-web-server-from-windows-share-folder/</link>
      <pubDate>Sun, 04 Feb 2018 15:41:05 +0000</pubDate>
      
      <guid>https://daonao.github.io/chuxin/blog/2018/02/04/docker-run-nginx-php-fpm-web-server-from-windows-share-folder/</guid>
      <description>CSDN博客
微博文章
微博
准备  PowerShell git docker 使用docker-machine命令可以找到一台可用的Docker主机  开包即用，不用看代码！ 初始化 进入一个文件夹。
下载已经写好的开源项目
git clone https://github.com/huzhenghui/Docker-run-nginx-PHP-fpm-web-server-from-Windows-share-folder  进入开源项目文件夹
cd Docker-run-nginx-PHP-fpm-web-server-from-Windows-share-folder  更新子模块代码
git submodule update --init  使用管理员权限的PowerShell运行共享文件夹到Docker的脚本。
.\share-windows-folder-to-docker\share-windows-folder-to-docker.ps1 -workingDir . -volumeName nginx-PHP-fpm-web-server  查看文件夹是否共享成功
docker run --rm -v nginx-PHP-fpm-web-server:/share alpine ls /share  如果成功将看到开源项目的如下文件列表
LICENSE docker-compose.yml nginx php share-windows-folder-to-docker  使用PHP内建的Web Server 启动PHP内建web server
docker run -it --rm -v nginx-PHP-fpm-web-server:/nginx-PHP-fpm-web-server -p 80:80 php -S 0.0.0.0:80 -t /nginx-PHP-fpm-web-server/php/public  正确启动将看到如下信息</description>
    </item>
    
  </channel>
</rss>